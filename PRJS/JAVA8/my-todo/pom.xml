<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>my-todo</artifactId>
    <name>My Todo</name>
    <version>2.0.0.0</version>
    <packaging>jar</packaging>

    <properties>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <vaadin.version>14.1.5</vaadin.version>
        <sqlite.version>3.25.2</sqlite.version>
        <jdbi.version> 3.12.0</jdbi.version>
        <liquibase.version>3.6.3</liquibase.version>
        <logback.version>1.2.3</logback.version>
        <junit.version>5.5.2</junit.version>
        <drivers.dir>${project.basedir}/drivers</drivers.dir>
        <drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>

        <vaadin.productionMode>true</vaadin.productionMode>
        <start-class>app.Application</start-class>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
    </parent>


    <dependencies>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>



        <!-- junit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>





        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>${jdbi.version}</version>
        </dependency>


        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlite</artifactId>
            <version>${jdbi.version}</version>
        </dependency>


        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-spring4</artifactId>
            <version>${jdbi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlobject</artifactId>
            <version>${jdbi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite.version}</version>
        </dependency>


        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>


        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-server-production-mode</artifactId>
        </dependency>


        <dependency>
            <groupId>com.vaadin</groupId>
            <!-- Replace artifactId with vaadin-core to use only free components -->
            <artifactId>vaadin-core</artifactId>
            <exclusions>
                <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
                <exclusion>
                    <groupId>com.vaadin.webjar</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.insites</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymer</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymerelements</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.vaadin</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.webcomponents</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.vaadin.stefan</groupId>
            <artifactId>fullcalendar2</artifactId>
            <version>2.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.vaadin.stefan</groupId>
            <artifactId>fullcalendar2-scheduler</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
            <exclusions>
                <!-- Excluding so that webjars are not included. -->
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


    </dependencies>






    <build>
        <defaultGoal>spring-boot:run</defaultGoal>



        <plugins>


            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dvaadin.productionMode</jvmArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-frontend</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.6.RELEASE</version>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>



<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                &lt;!&ndash; Clean build and startup time for Vaadin apps sometimes may exceed-->
<!--                     the default Spring Boot's 30sec timeout.  &ndash;&gt;-->
<!--                <configuration>-->
<!--                    <wait>500</wait>-->
<!--                    <maxAttempts>240</maxAttempts>-->
<!--                </configuration>-->
<!--            </plugin>-->

            <!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                            <goal>build-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <configuration>
                    <propertyFile>src/main/resources/liquibase/liquibase.properties</propertyFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>






            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.7.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>



                        <transformers>

                            <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.handlers</resource>
                            </transformer>
                            <transformer
                                    implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                                <resource>META-INF/spring.factories</resource>
                            </transformer>
                            <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.schemas</resource>
                            </transformer>
                            <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                            <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <mainClass>app.Application</mainClass>
                            </transformer>
                        </transformers>



                    <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
                    <createDependencyReducedPom>true</createDependencyReducedPom>


                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>

                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>shaded</shadedClassifierName>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>

                    <execution>
                        <id>copy-release-folder</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/release</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/release</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-java</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/release/win32/java</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${java.home}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>com.akathist.maven.plugins.launch4j</groupId>-->
<!--                <artifactId>launch4j-maven-plugin</artifactId>-->
<!--                <version>1.7.25</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>l4j-clui</id>-->
<!--                        <phase>install</phase>-->
<!--                        <goals>-->
<!--                            <goal>launch4j</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <headerType>gui</headerType>-->
<!--                            <jar>${project.build.directory}/${project.artifactId}-${project.version}-shaded.jar</jar>-->
<!--                            <outfile>${project.build.directory}/release/todo-app.exe</outfile>-->
<!--                            <downloadUrl>http://java.com/download</downloadUrl>-->
<!--                            <classPath>-->
<!--                                <mainClass>app.Application</mainClass>-->
<!--                                <preCp>anything</preCp>-->
<!--                            </classPath>-->
<!--                            <icon>src/main/resources/icon.ico</icon>-->
<!--                            <jre>-->
<!--                                <path>./win32/java</path>-->
<!--                            </jre>-->

<!--                            <versionInfo>-->
<!--                                <fileVersion>${project.version}</fileVersion>-->
<!--                                <txtFileVersion>${project.version}</txtFileVersion>-->
<!--                                <fileDescription>${project.name}</fileDescription>-->
<!--                                <copyright>2020 leonsoft</copyright>-->
<!--                                <productVersion>${project.version}</productVersion>-->
<!--                                <txtProductVersion>${project.version}</txtProductVersion>-->
<!--                                <productName>${project.name}</productName>-->
<!--                                <companyName>leonsoft</companyName>-->
<!--                                <internalName>todo-app</internalName>-->
<!--                                <originalFilename>todo-app.exe</originalFilename>-->
<!--                            </versionInfo>-->

<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->


<!--            <plugin>-->
<!--                <groupId>net.jsign</groupId>-->
<!--                <artifactId>jsign-maven-plugin</artifactId>-->
<!--                <version>3.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>keysign</id>-->
<!--                        <phase>install</phase>-->
<!--                        <goals>-->
<!--                            <goal>sign</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <file>${project.build.directory}/release/PrimerCRM.exe</file>-->
<!--                            <name>www.primer.gr</name>-->
<!--                            <url>www.primer.gr</url>-->
<!--                            <keystore>keystore/keystore.jks</keystore>-->
<!--                            <alias>primer</alias>-->
<!--                            <storepass>primer</storepass>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
















        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>

        </profile>
        <profile>
            <id>uat</id>

        </profile>

        <profile>
            <id>prod</id>

        </profile>

    </profiles>




    <repositories>
        <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->

        <!-- Main Maven repository -->
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <!-- Main Maven repository -->
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>



</project>